<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Yue&#39;s Jotter</title>
  
  
  <link href="https://stu-yue.github.io/atom.xml" rel="self"/>
  
  <link href="https://stu-yue.github.io/"/>
  <updated>2023-07-19T06:33:54.671Z</updated>
  <id>https://stu-yue.github.io/</id>
  
  <author>
    <name>stu-yue</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Welcome to Yue&#39;s Jotter</title>
    <link href="https://stu-yue.github.io/jottings/intro/"/>
    <id>https://stu-yue.github.io/jottings/intro/</id>
    <published>2023-07-13T08:23:57.000Z</published>
    <updated>2023-07-19T06:33:54.671Z</updated>
    
    
    
    
    
  </entry>
  
  <entry>
    <title>Summa | Firmware and Drivers</title>
    <link href="https://stu-yue.github.io/jottings/architecture/summa_firmware_and_drivers/"/>
    <id>https://stu-yue.github.io/jottings/architecture/summa_firmware_and_drivers/</id>
    <published>2023-07-13T06:21:53.000Z</published>
    <updated>2023-07-19T14:05:22.284Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>Reproduced in <a href="https://embeddedinventor.com/firmware-vs-device-drivers-explained-with-examples/">Firmware vs Device Drivers: Explained with Examples!</a></p></blockquote><h3 id="Firmware-vs-Device-Drivers"><a href="#Firmware-vs-Device-Drivers" class="headerlink" title="Firmware vs. Device Drivers"></a>Firmware vs. Device Drivers</h3><table><thead><tr><th>Firmware</th><th>Device Drivers</th></tr></thead><tbody><tr><td>Firmware is a class of software that is written for specific custom hardware.</td><td>Device drivers are software that is needed to make a given hardware accessory</td></tr><tr><td>Firmware lives and runs directly on the hardware.</td><td>Device drivers live on hard-disk and run on the CPU.</td></tr><tr><td>Firmware is independent of an operating system, i.e.,  you can run any operating system on top of a  given motherboard’s firmware.</td><td>Device drivers are highly dependent on the operating system on which they are used. For example, for the same hardware device, you need different device drivers for using that on Windows vs Linux.</td></tr><tr><td>Firmware cannot be updated through an operating system, we need to go into the BIOS&#x2F;UEFI to update the device drivers.</td><td>Drivers can be updated from within the operating system.</td></tr><tr><td>Firmware engineers do not need any knowledge of operating systems. But they need core knowledge on processors and the latest RAMs, PCIe standards, and so on to write firmware that complies with the latest standards</td><td>Device driver engineers need knowledge about the specific device that they are using, the communication standard the device uses to talk to the computer (like Bluetooth, USB, etc), and the operating system the device driver is written for.</td></tr><tr><td>Firmware is written by motherboard manufacturers</td><td>Drivers are written by engineers in companies that produce hardware accessories that connect to your computer</td></tr><tr><td>Examples include the BIOS&#x2F;UEFI interface that comes with the computer’s motherboard</td><td>Examples include special software you install to handle the extra buttons on your mouse, software that comes with any non-standard hardware like special game controllers, also the software that helps us use all the standard hardware like USB storage devices, keyboards, mice, headphones, etc.</td></tr></tbody></table><p>Layers of software on a typical computer are shown in the following figure:</p><img src="./summa_firmware_and_drivers/layer.png" style="zoom:50%" ><blockquote><h4 id="Firmware"><a href="#Firmware" class="headerlink" title="Firmware"></a>Firmware</h4><p>​        <strong>Firmware is a computer program that is written to work directly on specific custom hardware and it lives in non-volatile memory such as a flash chip and it is executed directly from it. The job of the firmware is to make the hardware accessible to the operating system.</strong> Firmware can be thought of as the glasses through which the operating system can see the actual hardware!</p><p>​           Originally Firmware is written on Masked ROMs, which is a special type of memory that can be programmed&#x2F;written-data-to only once. The products were then shipped with these unchangeable programs called firmware and they run for ages till the device goes out of use.</p><p>​         The first replacement of Masked ROMs came in the form of EPROM which can be erased by exposure to UV light and then reprogrammed as required. Then came EEPROMs which used electricity to change the contents. Nowadays the Masked ROMs have been replaced with Flash memory, which is cheaper and serves the purpose. </p><h4 id="Device-Drivers"><a href="#Device-Drivers" class="headerlink" title="Device Drivers"></a>Device Drivers</h4><p><strong>Device drivers are programs that can control a given hardware and provide a software interface to it. Other programs like Operating Systems can interact with the hardware through this software interface without needing to know the actual underlying implementation of the software interface.</strong></p></blockquote><p>The relation graph between firmware and drivers is also shown below:</p><img src="./summa_firmware_and_drivers/relation_graph.png" style="zoom:50%" ><p>​        Generally speaking, drivers and firmware together form the module that operates hardware. <strong>But why not make the firmware perfect so that it doesn’t require driver support?</strong> </p><p>​         The answer to the above question is, there are different operating systems which have completely different ways of operating hardware. So, <strong>on the one hand, hardware manufactures need to write firmware to make their hardware easier to use with software,</strong> but <strong>on the other hand, they cannot make the firmware too rigid in order to be compatible with various operating systems. They must leave enough room for software to freely operate</strong> —— and <strong>that’s where drivers come in.</strong></p>]]></content>
    
    
      
      
    <summary type="html">&lt;blockquote&gt;
&lt;p&gt;Reproduced in &lt;a href=&quot;https://embeddedinventor.com/firmware-vs-device-drivers-explained-with-examples/&quot;&gt;Firmware vs Device </summary>
      
    
    
    
    <category term="architecture" scheme="https://stu-yue.github.io/categories/architecture/"/>
    
    
    <category term="firmware" scheme="https://stu-yue.github.io/tags/firmware/"/>
    
    <category term="driver" scheme="https://stu-yue.github.io/tags/driver/"/>
    
  </entry>
  
</feed>
